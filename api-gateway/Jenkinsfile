pipeline {
    agent any

    environment {
        REGISTRY = "your-openshift-registry-url" // e.g., "image-registry.openshift-image-registry.svc:5000"
        APP_NAME = "api-gateway"              // Name of your app
        PROJECT_NAME = "your-project-name"       // OpenShift project
        IMAGE_TAG = "latest"
    }

    stages {
        stage('Checkout Code') {
            steps {
                // Checkout code from the Git repository
                git branch: 'master', url: 'https://github.com/vr-here-01/vr-here-backend.git'
            }
        }

        stage('Set Executable Permission') {
            steps {
                // Set executable permission for mvnw
                sh 'chmod +x api-gateway/mvnw'
            }
        }

        stage('Build Maven Project') {
            steps {
                // Build the Spring Boot application using Maven Wrapper
                sh './api-gateway/mvnw clean package -DskipTests'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image from the Dockerfile
                    sh """
                    docker build -t $REGISTRY/$PROJECT_NAME/$APP_NAME:$IMAGE_TAG .
                    """
                }
            }
        }

        stage('Push Docker Image to OpenShift Registry') {
            steps {
                script {
                    // Log in to OpenShift and push the image
                    sh """
                    oc login --token=your-token --server=https://api.your-openshift-cluster:6443
                    docker login -u \$(oc whoami) -p \$(oc whoami -t) $REGISTRY
                    docker push $REGISTRY/$PROJECT_NAME/$APP_NAME:$IMAGE_TAG
                    """
                }
            }
        }

        stage('Deploy to OpenShift') {
            steps {
                script {
                    // Deploy the image to OpenShift
                    sh """
                    oc project $PROJECT_NAME
                    oc new-app $REGISTRY/$PROJECT_NAME/$APP_NAME:$IMAGE_TAG --name=$APP_NAME || oc rollout latest $APP_NAME
                    oc expose svc/$APP_NAME
                    """
                }
            }
        }
    }

    post {
        always {
            // Clean up workspace
            cleanWs()
        }
    }
}
